<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1><%= @habit.title %> - カレンダー</h1>
    <div class="btn-group" role="group">
      <%= link_to "習慣詳細", @habit, class: "btn btn-outline-primary" %>
      <%= link_to "習慣一覧", habits_path, class: "btn btn-outline-secondary" %>
    </div>
  </div>

  <div class="card">
    <div class="card-body">
      <div class="alert alert-info mb-3">
        <h6 class="alert-heading mb-2">💡 使い方</h6>
        <p class="mb-0">カレンダーの日付をクリックして習慣の達成状況を記録できます。クリックするたびに「完了」と「未記録」が切り替わります。<br><small class="text-muted">※3日前までの日付のみクリック可能です</small></p>
      </div>

      <% begin %>
        <%= month_calendar(events: @habit_records, attribute: :recorded_at) do |date, records| %>
          <div class="calendar-date <%= 'completed-day' if records.any? %>" data-date="<%= date.strftime('%Y-%m-%d') %>" style="cursor: pointer; height: 100%;">>
            <%= date.day %>

            <% if records.any? %>
              <div class="calendar-events mt-2">
                <% records.each do |record| %>
                  <div class="calendar-event completed"
                       title="<%= @habit.title %> - 完了">
                    <span class="completion-check">✓</span>
                    <% if record.note.present? %>
                      <span class="text-muted" title="<%= record.note %>">📝</span>
                    <% end %>
                  </div>
                <% end %>
              </div>
            <% else %>
              <div class="no-record-indicator" style="opacity: 0.5; font-size: 0.8em; margin-top: 4px;">
                未記録
              </div>
            <% end %>
          </div>
        <% end %>
      <% rescue NameError %>
        <div class="alert alert-warning">
          <h5>カレンダー機能の準備中</h5>
          <p>カレンダー表示には <code>simple_calendar</code> gemのインストールが必要です。</p>
          <p>以下のコマンドを実行してください:</p>
          <pre><code>bundle install</code></pre>
        </div>

        <!-- Fallback: Simple list view -->
        <div class="mt-4">
          <h5>今月の「<%= @habit.title %>」の記録</h5>
          <% @habit_records.where(recorded_at: Date.current.beginning_of_month..Date.current.end_of_month).order(:recorded_at).each do |record| %>
            <div class="d-flex justify-content-between align-items-center border-bottom py-2">
              <div>
                <strong><%= record.recorded_at.strftime("%Y年%m月%d日") %></strong>
                <% if record.note.present? %>
                  <small class="text-muted d-block"><%= record.note %></small>
                <% end %>
              </div>
              <%= habit_status_badge(record) %>
            </div>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>

  <div class="row mt-4">
    <div class="col-md-6">
      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">習慣情報</h5>
        </div>
        <div class="card-body">
          <h6><%= @habit.title %></h6>
          <% if @habit.description.present? %>
            <p class="text-muted small"><%= simple_format(@habit.description) %></p>
          <% end %>
          <span class="badge <%= @habit.active? ? 'bg-success' : 'bg-secondary' %>">
            <%= @habit.active? ? 'アクティブ' : '非アクティブ' %>
          </span>
        </div>
      </div>
    </div>

    <div class="col-md-6">
      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">今月の統計</h5>
        </div>
        <div class="card-body">
          <% completion_rate = habit_completion_rate(@habit) %>
          <div class="mb-3">
            <strong>完了率: <%= completion_rate %>%</strong>
            <div class="progress mt-2">
              <div class="progress-bar <%= completion_rate >= 70 ? 'bg-success' : completion_rate >= 30 ? 'bg-warning' : 'bg-danger' %>"
                   style="width: <%= completion_rate %>%"></div>
            </div>
          </div>

          <div class="mb-2">
            <span class="badge bg-success">✓</span> 完了した日
          </div>
          <div class="mb-2">
            <span class="text-muted">📝</span> メモ付きの記録
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
// Use both DOMContentLoaded and Turbo events for better compatibility
function initializeCalendar() {
  const calendarDates = document.querySelectorAll('.calendar-date');
  const habitId = <%= @habit.id %>;
  
  console.log('Initializing calendar with', calendarDates.length, 'date elements');
  
  calendarDates.forEach(function(dateElement) {
    // Remove any existing listeners to avoid duplicates
    dateElement.removeEventListener('click', handleDateClick);
    dateElement.addEventListener('click', handleDateClick);
  });
  
  function handleDateClick(event) {
    const dateElement = event.currentTarget;
    const date = dateElement.dataset.date;
    
    if (!date) {
      console.error('No date found on element:', dateElement);
      return;
    }
    
    const currentDate = new Date();
    const selectedDate = new Date(date);
    const threeDaysAgo = new Date();
    threeDaysAgo.setDate(currentDate.getDate() - 3);
    
    console.log('Date clicked:', date, 'Selected:', selectedDate, 'Three days ago:', threeDaysAgo);
    
    // Only allow interaction with dates up to 3 days ago
    if (selectedDate <= threeDaysAgo) {
      toggleRecord(habitId, date, dateElement);
    } else {
      alert('3日前までの日付のみ記録可能です。');
    }
  }
  
  function toggleRecord(habitId, date, dateElement) {
    console.log('Toggling record for habit', habitId, 'on date', date);
    
    // Add loading state
    dateElement.style.opacity = '0.5';
    
    // Get CSRF token
    const csrfToken = document.querySelector('[name="csrf-token"]')?.content;
    if (!csrfToken) {
      console.error('CSRF token not found');
      alert('認証トークンが見つかりません。ページを再読み込みしてください。');
      dateElement.style.opacity = '1';
      return;
    }
    
    fetch(`/habits/${habitId}/toggle_record_for_date`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'X-CSRF-Token': csrfToken
      },
      body: JSON.stringify({ date: date })
    })
    .then(response => {
      console.log('Response status:', response.status);
      return response.json();
    })
    .then(data => {
      console.log('Response data:', data);
      if (data.success) {
        // Reload the page to show updated state
        window.location.reload();
      } else {
        alert('記録の更新に失敗しました: ' + (data.error || '不明なエラー'));
        dateElement.style.opacity = '1';
      }
    })
    .catch(error => {
      console.error('Error:', error);
      alert('記録の更新中にエラーが発生しました');
      dateElement.style.opacity = '1';
    });
  }
}

// Initialize on both DOMContentLoaded and Turbo events
document.addEventListener('DOMContentLoaded', initializeCalendar);
document.addEventListener('turbo:load', initializeCalendar);
document.addEventListener('turbo:frame-load', initializeCalendar);
</script>
