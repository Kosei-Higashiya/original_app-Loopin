<div class="container mx-auto px-4 py-8">
  <!-- Trophy Header Section -->
  <div class="trophy-header">
    <div class="trophy-count">
      <span class="trophy-count-icon">🏆</span>
      <%= @user_badges.count %>
    </div>
    <h1 class="trophy-section-title">トロフィー</h1>
  </div>

  <!-- Trophy Grid Display -->
  <div class="trophy-grid">
    <% @badges.each do |badge| %>
      <% user_has_badge = current_user.has_badge?(badge) %>
      <% 
        # Determine progress based on badge condition
        progress_class = if user_has_badge
          'full'
        else
          # You can add logic here to calculate partial progress if needed
          # For now, just show empty for unearned badges
          'empty'
        end
      %>
      
      <%= link_to badge_path(badge), class: "trophy-badge-link" do %>
        <div class="trophy-badge <%= 'earned' if user_has_badge %>">
          <div class="trophy-platform <%= 'earned' if user_has_badge %>">
            <div class="trophy-icon">
              <%= badge.icon %>
            </div>
          </div>
          <div class="trophy-progress">
            <div class="trophy-progress-bar <%= progress_class %>"></div>
          </div>
        </div>
      <% end %>
    <% end %>
  </div>

  <!-- Action Buttons -->
  <div class="text-center mt-8">
    <%= button_to "バッジをチェック", check_awards_badges_path, method: :post,
        id: "badge-check-button",
        class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg shadow-lg transition-all duration-300 hover:transform hover:translateY(-1px)" %>
  </div>

  <div class="mt-6 text-center">
    <%= link_to "ダッシュボードに戻る", dashboard_path, 
        class: "text-blue-500 hover:text-blue-700 font-medium transition-colors duration-300" %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const checkButton = document.getElementById('badge-check-button');
  if (!checkButton) return;

  let originalText = checkButton.innerText;
  let timeoutId;
  
  checkButton.addEventListener('click', function(e) {
    // Show loading state
    this.innerHTML = '<span style="display: inline-block; animation: spin 1s linear infinite;">🔄</span> チェック中...';
    this.disabled = true;
    this.style.opacity = '0.7';
    
    // Set timeout to re-enable button if request takes too long (10 seconds)
    timeoutId = setTimeout(() => {
      this.innerHTML = originalText;
      this.disabled = false;
      this.style.opacity = '1';
      alert('処理に時間がかかっています。もう一度お試しください。');
    }, 10000);
  });
  
  // Clean up timeout if page unloads
  window.addEventListener('beforeunload', function() {
    if (timeoutId) {
      clearTimeout(timeoutId);
    }
  });
});
</script>

<style>
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>
